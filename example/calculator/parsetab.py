
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftUMINUSDIVIDE EQUALS LPAREN MINUS NAME NUMBER PLUS RPAREN TIMESstatement : NAME EQUALS expressionstatement : expressionexpression : expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'MINUS':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[1,1,-9,9,-10,1,-7,-10,1,1,1,1,1,9,-4,-3,-5,-6,9,-8,]),'$end':([2,3,4,5,7,8,15,16,17,18,19,20,],[-9,-2,-10,0,-7,-10,-4,-3,-5,-6,-1,-8,]),'DIVIDE':([2,3,4,7,8,14,15,16,17,18,19,20,],[-9,12,-10,-7,-10,12,12,12,-5,-6,12,-8,]),'TIMES':([2,3,4,7,8,14,15,16,17,18,19,20,],[-9,11,-10,-7,-10,11,11,11,-5,-6,11,-8,]),'NAME':([0,1,6,9,10,11,12,13,],[4,8,8,8,8,8,8,8,]),'NUMBER':([0,1,6,9,10,11,12,13,],[2,2,2,2,2,2,2,2,]),'PLUS':([2,3,4,7,8,14,15,16,17,18,19,20,],[-9,10,-10,-7,-10,10,-4,-3,-5,-6,10,-8,]),'EQUALS':([4,],[13,]),'LPAREN':([0,1,6,9,10,11,12,13,],[6,6,6,6,6,6,6,6,]),'RPAREN':([2,7,8,14,15,16,17,18,20,],[-9,-7,-10,20,-4,-3,-5,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[5,]),'expression':([0,1,6,9,10,11,12,13,],[3,7,14,15,16,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',49),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',54),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',59),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',60),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',61),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',62),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',70),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',75),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',80),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',85),
]
